version: 2
orbs:
  vulnerability-checker: whitesource/vulnerability-checker@19.10.1

jobs:
  build:
    docker:
      - image: circleci/node:12-buster
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "0f:8e:93:2e:48:c0:0f:09:e1:e6:e0:1a:20:37:2a:a1"
            - "18:1a:0b:2c:b1:5e:9b:3c:2e:19:64:3b:05:58:ba:3b"
      # - run:
      #     name: Setup Env
      #     command: |
      #       echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
      #       echo 'export IMAGE_NAME=node-circleci-docker' >> $BASH_ENV 
      #       npm install
      # - setup_remote_docker:
      #     docker_layer_caching: false 
      # - run:
      #     name: Building image
      #     command: docker build -t $DOCKER_LOGIN/$IMAGE_NAME:$TAG .
      # - run:
      #     name: Push image
      #     command: |
      #       echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
      #       docker push $DOCKER_LOGIN/$IMAGE_NAME:$TAG 
      - run:
          name: Deploy to Kubernetes
          command: |
            ssh -o StrictHostKeyChecking=no -i ssh.key ubuntu@18.166.73.123 'kubectl delete pod apollo && kubectl delete service apollo && kubectl run apollo --image=macryant/node-circleci-docker:0.1.18 --port=4000 --expose && kubectl port-forward --address 0.0.0.0 apollo 4000:4000'
  vulnerability-scan:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run:
          command: |
            curl -LJO https://vulnerability-checker.s3.amazonaws.com/release/partner/CircleCI/wss-vulnerability-checker-201910-Top250-Top50-CircleCI.zip
            unzip wss-vulnerability-checker-201910-Top250-Top50-CircleCI.zip
            ./vulnerability-checker.sh -d src
            mkdir -p /tmp/results
            cp VulnerabilityCheckerReport.html /tmp/results
            echo check artifacts for results
      - store_artifacts:
          path: /tmp/results
  dynamic-code-test:
    docker:
      - image: circleci/node:12-buster
    steps:
      - checkout
      - run:
          name: Initialize Environment
          command: |
            npm install
            mkdir -p /tmp/results
      - run:
          name: Run Tests
          command: |
            npx mocha --reporter mocha-simple-html-reporter --reporter-options output=/tmp/results/report.html
      - store_artifacts:
            path: /tmp/results

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      # - vulnerability-scan
      # - dynamic-code-test
      - build
          # requires:
          #   - vulnerability-scan
          #   - dynamic-code-test